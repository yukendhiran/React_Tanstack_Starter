/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedNoLayoutImport } from './routes/_authenticatedNoLayout'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedNoLayoutSampleImport } from './routes/_authenticatedNoLayout/Sample'

// Create Virtual Routes

const AuthenticatedAboutLazyImport = createFileRoute('/_authenticated/about')()
const AuthRegisterIndexLazyImport = createFileRoute('/_auth/register/')()
const AuthLoginIndexLazyImport = createFileRoute('/_auth/login/')()

// Create/Update Routes

const AuthenticatedNoLayoutRoute = AuthenticatedNoLayoutImport.update({
  id: '/_authenticatedNoLayout',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAboutLazyRoute = AuthenticatedAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/about.lazy').then((d) => d.Route),
)

const AuthenticatedNoLayoutSampleRoute =
  AuthenticatedNoLayoutSampleImport.update({
    path: '/Sample',
    getParentRoute: () => AuthenticatedNoLayoutRoute,
  } as any)

const AuthRegisterIndexLazyRoute = AuthRegisterIndexLazyImport.update({
  path: '/register/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/register/index.lazy').then((d) => d.Route),
)

const AuthLoginIndexLazyRoute = AuthLoginIndexLazyImport.update({
  path: '/login/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/login/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticatedNoLayout': {
      id: '/_authenticatedNoLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedNoLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_authenticatedNoLayout/Sample': {
      id: '/_authenticatedNoLayout/Sample'
      path: '/Sample'
      fullPath: '/Sample'
      preLoaderRoute: typeof AuthenticatedNoLayoutSampleImport
      parentRoute: typeof AuthenticatedNoLayoutImport
    }
    '/_authenticated/about': {
      id: '/_authenticated/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthenticatedAboutLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_auth/login/': {
      id: '/_auth/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginIndexLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register/': {
      id: '/_auth/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterIndexLazyImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginIndexLazyRoute: typeof AuthLoginIndexLazyRoute
  AuthRegisterIndexLazyRoute: typeof AuthRegisterIndexLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginIndexLazyRoute: AuthLoginIndexLazyRoute,
  AuthRegisterIndexLazyRoute: AuthRegisterIndexLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface AuthenticatedRouteChildren {
  AuthenticatedAboutLazyRoute: typeof AuthenticatedAboutLazyRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAboutLazyRoute: AuthenticatedAboutLazyRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface AuthenticatedNoLayoutRouteChildren {
  AuthenticatedNoLayoutSampleRoute: typeof AuthenticatedNoLayoutSampleRoute
}

const AuthenticatedNoLayoutRouteChildren: AuthenticatedNoLayoutRouteChildren = {
  AuthenticatedNoLayoutSampleRoute: AuthenticatedNoLayoutSampleRoute,
}

const AuthenticatedNoLayoutRouteWithChildren =
  AuthenticatedNoLayoutRoute._addFileChildren(
    AuthenticatedNoLayoutRouteChildren,
  )

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedNoLayoutRouteWithChildren
  '/Sample': typeof AuthenticatedNoLayoutSampleRoute
  '/about': typeof AuthenticatedAboutLazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/login': typeof AuthLoginIndexLazyRoute
  '/register': typeof AuthRegisterIndexLazyRoute
}

export interface FileRoutesByTo {
  '': typeof AuthenticatedNoLayoutRouteWithChildren
  '/Sample': typeof AuthenticatedNoLayoutSampleRoute
  '/about': typeof AuthenticatedAboutLazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/login': typeof AuthLoginIndexLazyRoute
  '/register': typeof AuthRegisterIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticatedNoLayout': typeof AuthenticatedNoLayoutRouteWithChildren
  '/_authenticatedNoLayout/Sample': typeof AuthenticatedNoLayoutSampleRoute
  '/_authenticated/about': typeof AuthenticatedAboutLazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_auth/login/': typeof AuthLoginIndexLazyRoute
  '/_auth/register/': typeof AuthRegisterIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/Sample' | '/about' | '/' | '/login' | '/register'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/Sample' | '/about' | '/' | '/login' | '/register'
  id:
    | '__root__'
    | '/_auth'
    | '/_authenticated'
    | '/_authenticatedNoLayout'
    | '/_authenticatedNoLayout/Sample'
    | '/_authenticated/about'
    | '/_authenticated/'
    | '/_auth/login/'
    | '/_auth/register/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthenticatedNoLayoutRoute: typeof AuthenticatedNoLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthenticatedNoLayoutRoute: AuthenticatedNoLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_authenticated",
        "/_authenticatedNoLayout"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login/",
        "/_auth/register/"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/about",
        "/_authenticated/"
      ]
    },
    "/_authenticatedNoLayout": {
      "filePath": "_authenticatedNoLayout.tsx",
      "children": [
        "/_authenticatedNoLayout/Sample"
      ]
    },
    "/_authenticatedNoLayout/Sample": {
      "filePath": "_authenticatedNoLayout/Sample.tsx",
      "parent": "/_authenticatedNoLayout"
    },
    "/_authenticated/about": {
      "filePath": "_authenticated/about.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_auth/login/": {
      "filePath": "_auth/login/index.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/register/": {
      "filePath": "_auth/register/index.lazy.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
